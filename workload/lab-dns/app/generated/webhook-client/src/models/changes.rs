/*
 * External DNS Webhook Server
 *
 * Implements the external DNS webhook endpoints.
 *
 * The version of the OpenAPI document: v0.15.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Changes : This is the list of changes send by `external-dns` that need to be applied.  There are four lists of endpoints.  The `create` and `delete` lists are lists of records to create and delete respectively.  The `updateOld` and `updateNew` lists are paired. For each entry there's the old version of the record and a new version of the record. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Changes {
    /// This is a list of DNS records. 
    #[serde(rename = "create", skip_serializing_if = "Option::is_none")]
    pub create: Option<Vec<models::Endpoint>>,
    /// This is a list of DNS records. 
    #[serde(rename = "updateOld", skip_serializing_if = "Option::is_none")]
    pub update_old: Option<Vec<models::Endpoint>>,
    /// This is a list of DNS records. 
    #[serde(rename = "updateNew", skip_serializing_if = "Option::is_none")]
    pub update_new: Option<Vec<models::Endpoint>>,
    /// This is a list of DNS records. 
    #[serde(rename = "delete", skip_serializing_if = "Option::is_none")]
    pub delete: Option<Vec<models::Endpoint>>,
}

impl Changes {
    /// This is the list of changes send by `external-dns` that need to be applied.  There are four lists of endpoints.  The `create` and `delete` lists are lists of records to create and delete respectively.  The `updateOld` and `updateNew` lists are paired. For each entry there's the old version of the record and a new version of the record. 
    pub fn new() -> Changes {
        Changes {
            create: None,
            update_old: None,
            update_new: None,
            delete: None,
        }
    }
}

